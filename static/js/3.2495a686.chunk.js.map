{"version":3,"sources":["containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css"],"names":["module","exports","checkoutSummary","props","className","classes","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","minLength","errorMessage","valid","touched","street","zip","maxLength","country","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","Object","keys","map","order","price","totalPrice","orderData","userId","onOrderBurger","token","checkValidity","rules","isValid","trim","length","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","updatedOrderForm","inputIdentifiers","setState","formElementsArray","key","this","push","id","config","form","onSubmit","formElement","Input","invalid","shouldValidate","changed","disabled","loading","Spinner","Component","connect","burgerBuilder","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","url","component","input","inputElement","inputClasses","InputElement","validationError","Invalid","ValidationError","join","onChange","opt","Label","label"],"mappings":"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","file":"static/js/3.2495a686.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__Oqv12\",\"Input\":\"ContactData_Input__1QiMp\"};","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.module.css\";\r\n\r\nconst checkoutSummary = props => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../../store/actions/actions\";\r\nimport { updateObject } from \"../../../shared/utility\";\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n          errorMessage: \"Name must have more than 3 characters\"\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Street\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          errorMessage: \"Fill in the required fields\"\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zip: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Zip\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 4,\r\n          maxLength: 6,\r\n          errorMessage: \"Zip code must be 4-6 digits\"\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          errorMessage: \"Fill in the required fields\"\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your Email\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          errorMessage: \"Fill in the required fields\"\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            {\r\n              value: \"fastest\",\r\n              displayValue: \"fastest\"\r\n            },\r\n            {\r\n              value: \"cheapest\",\r\n              displayValue: \"cheapest\"\r\n            }\r\n          ]\r\n        },\r\n        validation: {\r\n          required: false,\r\n          errorMessage: null\r\n        },\r\n        valid: true,\r\n        value: \"fastest\",\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  orderHandler = event => {\r\n    event.preventDefault()\r\n    const formData = {};\r\n    Object.keys(this.state.orderForm).map(\r\n      keys => (formData[keys] = this.state.orderForm[keys].value)\r\n    );\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    };\r\n\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    \r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    } \r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], \r\n      {value: event.target.value,\r\n      valid: this.checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n      touched: true\r\n      });\r\n      const updatedOrderForm = updateObject(this.state.orderForm, {\r\n        [inputIdentifier]: updatedFormElement\r\n      })\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n    \r\n    let formIsValid = true;\r\n    for (let inputIdentifiers in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifiers].valid && formIsValid;\r\n    }\r\n    \r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            touched={formElement.config.touched}\r\n            shouldValidate={formElement.config.validation}\r\n            errorMessage={formElement.config.validation ? formElement.config.validation.errorMessage : null}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n ","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\n\r\nclass Checkout extends Component {\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n          />\r\n          <Route\r\n            path={this.props.match.url + \"/contact-data\"}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  let validationError = null;\r\n  if (props.touched && props.invalid && props.shouldValidate) {\r\n    inputClasses.push(classes.Invalid);\r\n    validationError = <p className={classes.ValidationError}>{props.errorMessage}</p>;\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          onChange={props.changed}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(opt => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {validationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3-gq-\",\"Label\":\"Input_Label__3K4A5\",\"InputElement\":\"Input_InputElement__3obWe\",\"Invalid\":\"Input_Invalid__H9Uhu\",\"ValidationError\":\"Input_ValidationError__2fEzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__21P04\"};"],"sourceRoot":""}